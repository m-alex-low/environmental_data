boxplot(Result[Sample.Year=="2015"] ~ Location[Sample.Year=="2015"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2015",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2016"] ~ Location[Sample.Year=="2016"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2016",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2017"] ~ Location[Sample.Year=="2017"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2017",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2018"] ~ Location[Sample.Year=="2018"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2018",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2019"] ~ Location[Sample.Year=="2019"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2019",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
View(df)
#Creating a dataframe from excel sheet input
df <- data.frame(read_excel(here("data", "Quantitative_Data_Set.xlsx"), range = "A2:E80"))
View(df)
#By location
boxplot(Result ~ Location, data = df, ylim = c(0,450), main = "Sampling Result by Distance", xlab = "Distance From Spill", ylab = "Sampling Result (ug/kg)")
#Boxplots generated to examine tendencies of data by year and location. plot = FALSE will return the statistics
#on which the boxplots are constructed, which include minimums, maximums, medians, and First/Third Quartiles
par(mfrow = c(1,1))
#By location
boxplot(Result ~ Location, data = df, ylim = c(0,450), main = "Sampling Result by Distance", xlab = "Distance From Spill", ylab = "Sampling Result (ug/kg)")
#Visuals of Location(distance) vs Sample Result, by year
par(mfrow = c(2,3))
boxplot(Result[Sample.Year=="2015"] ~ Location[Sample.Year=="2015"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2015",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2016"] ~ Location[Sample.Year=="2016"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2016",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2017"] ~ Location[Sample.Year=="2017"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2017",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2018"] ~ Location[Sample.Year=="2018"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2018",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2019"] ~ Location[Sample.Year=="2019"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2019",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
View(statistics_location)
#Converting mg/kg readings to ug/kg for data consistency
df$Result[df$Units == "mg/kg"] <- df$Result[df$Units == "mg/kg"] * 1000
df$Units[df$Units == "mg/kg"] <- "ug/kg"
View(df)
#Histograms generated to view spread of sampling results by year
par(mfrow = c(2, 3))
hist(df$Result[df$Sample.Year == "2015"], main = "Sample Distributions, 2015",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2016"], main = "Sample Distributions, 2016",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2017"], main = "Sample Distributions, 2017",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2018"], main = "Sample Distributions, 2018",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2019"], main = "Sample Distributions, 2019",
xlab = "Sampling Result (ug/kg)")
#Boxplots generated to examine tendencies of data by year and location. plot = FALSE will return the statistics
#on which the boxplots are constructed, which include minimums, maximums, medians, and First/Third Quartiles
par(mfrow = c(1,1))
#By year
boxplot(Result ~ Sample.Year, data = df, ylim = c(0,450), main = "Sampling Result by Year", xlab = "Year Sampled", ylab = "Sampling Result (ug/kg)")
statistics_year <- data.frame(boxplot(Result ~ Sample.Year, data = df, plot = FALSE)$stats, row.names=c("Min","First Quartile","Median","Third Quartile","Maximum"))
colnames(statistics_year) <- c("2015", "2016", "2017", "2018", "2019")
#By location
boxplot(Result ~ Location, data = df, ylim = c(0,450), main = "Sampling Result by Distance", xlab = "Distance From Spill", ylab = "Sampling Result (ug/kg)")
statistics_location <- data.frame(boxplot(Result ~ Location, data = df, plot = FALSE)$stats, row.names=c("Min","First Quartile","Median","Third Quartile","Maximum"))
colnames(statistics_location) <- c("0-0.5 miles", "0.5-1 miles", "1+ miles")
#Visuals of Location(distance) vs Sample Result, by year
par(mfrow = c(2,3))
boxplot(Result[Sample.Year=="2015"] ~ Location[Sample.Year=="2015"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2015",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2016"] ~ Location[Sample.Year=="2016"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2016",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2017"] ~ Location[Sample.Year=="2017"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2017",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2018"] ~ Location[Sample.Year=="2018"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2018",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2019"] ~ Location[Sample.Year=="2019"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2019",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
#Histograms generated to view spread of sampling results by year
par(mfrow = c(2, 3))
hist(df$Result[df$Sample.Year == "2015"], main = "Sample Distributions, 2015",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2016"], main = "Sample Distributions, 2016",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2017"], main = "Sample Distributions, 2017",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2018"], main = "Sample Distributions, 2018",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2019"], main = "Sample Distributions, 2019",
xlab = "Sampling Result (ug/kg)")
#Histograms generated to view spread of sampling results by year
par(mfrow = c(2, 3))
hist(df$Result[df$Sample.Year == "2015"], main = "Sample Distributions, 2015",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2016"], main = "Sample Distributions, 2016",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2017"], main = "Sample Distributions, 2017",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2018"], main = "Sample Distributions, 2018",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2019"], main = "Sample Distributions, 2019",
xlab = "Sampling Result (ug/kg)")
#Boxplots generated to examine tendencies of data by year and location. plot = FALSE will return the statistics
#on which the boxplots are constructed, which include minimums, maximums, medians, and First/Third Quartiles
par(mfrow = c(1,1))
#By year
boxplot(Result ~ Sample.Year, data = df, ylim = c(0,450), main = "Sampling Result by Year", xlab = "Year Sampled", ylab = "Sampling Result (ug/kg)")
#Visuals of Location(distance) vs Sample Result, by year
par(mfrow = c(2,3))
boxplot(Result[Sample.Year=="2015"] ~ Location[Sample.Year=="2015"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2015",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2016"] ~ Location[Sample.Year=="2016"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2016",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2017"] ~ Location[Sample.Year=="2017"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2017",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2018"] ~ Location[Sample.Year=="2018"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2018",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2019"] ~ Location[Sample.Year=="2019"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2019",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
#Figure 2: By year
boxplot(Result ~ Sample.Year, data = df, ylim = c(0,450), main = "Sampling Result by Year", xlab = "Year Sampled", ylab = "Sampling Result (ug/kg)")
#Boxplots generated to examine tendencies of data by year and location. plot = FALSE will return the statistics
#on which the boxplots are constructed, which include minimums, maximums, medians, and First/Third Quartiles
par(mfrow = c(1,1))
#Figure 2: By year
boxplot(Result ~ Sample.Year, data = df, ylim = c(0,450), main = "Sampling Result by Year", xlab = "Year Sampled", ylab = "Sampling Result (ug/kg)")
statistics_year <- data.frame(boxplot(Result ~ Sample.Year, data = df, plot = FALSE)$stats, row.names=c("Min","First Quartile","Median","Third Quartile","Maximum"))
colnames(statistics_year) <- c("2015", "2016", "2017", "2018", "2019")
#Creating a dataframe from excel sheet input
df <- data.frame(read_excel(here("data", "Quantitative_Data_Set.xlsx"), range = "A2:E80"))
#Figure 1: Converting mg/kg readings to ug/kg for data consistency
df$Result[df$Units == "mg/kg"] <- df$Result[df$Units == "mg/kg"] * 1000
df$Units[df$Units == "mg/kg"] <- "ug/kg"
#Histograms generated to view spread of sampling results by year
par(mfrow = c(2, 3))
hist(df$Result[df$Sample.Year == "2015"], main = "Sample Distributions, 2015",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2016"], main = "Sample Distributions, 2016",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2017"], main = "Sample Distributions, 2017",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2018"], main = "Sample Distributions, 2018",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2019"], main = "Sample Distributions, 2019",
xlab = "Sampling Result (ug/kg)")
#Boxplots generated to examine tendencies of data by year and location. plot = FALSE will return the statistics
#on which the boxplots are constructed, which include minimums, maximums, medians, and First/Third Quartiles
par(mfrow = c(1,1))
#Figure 2: By year
boxplot(Result ~ Sample.Year, data = df, ylim = c(0,450), main = "Sampling Result by Year", xlab = "Year Sampled", ylab = "Sampling Result (ug/kg)")
statistics_year <- data.frame(boxplot(Result ~ Sample.Year, data = df, plot = FALSE)$stats, row.names=c("Min","First Quartile","Median","Third Quartile","Maximum"))
colnames(statistics_year) <- c("2015", "2016", "2017", "2018", "2019")
#By location
boxplot(Result ~ Location, data = df, ylim = c(0,450), main = "Sampling Result by Distance", xlab = "Distance From Spill", ylab = "Sampling Result (ug/kg)")
statistics_location <- data.frame(boxplot(Result ~ Location, data = df, plot = FALSE)$stats, row.names=c("Min","First Quartile","Median","Third Quartile","Maximum"))
colnames(statistics_location) <- c("0-0.5 miles", "0.5-1 miles", "1+ miles")
hist(df$Result[df$Sample.Year == "2015"], main = "Sample Distributions, 2015",
xlab = "Sampling Result (ug/kg)")
#By location
boxplot(Result ~ Location, data = df, ylim = c(0,450), main = "Sampling Result by Distance", xlab = "Distance From Spill", ylab = "Sampling Result (ug/kg)")
#Figure 3: Visuals of Location(distance) vs Sample Result, by year
par(mfrow = c(2,3))
boxplot(Result[Sample.Year=="2015"] ~ Location[Sample.Year=="2015"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2015",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2016"] ~ Location[Sample.Year=="2016"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2016",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2017"] ~ Location[Sample.Year=="2017"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2017",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2018"] ~ Location[Sample.Year=="2018"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2018",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2019"] ~ Location[Sample.Year=="2019"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2019",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
View(statistics_location)
View(statistics_year)
boxplot(Result ~ Sample.Year, data = df, plot = FALSE)
#Histograms generated to view spread of sampling results by year
par(mfrow = c(2, 3))
hist(df$Result[df$Sample.Year == "2015"], main = "Sample Distributions, 2015",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2016"], main = "Sample Distributions, 2016",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2017"], main = "Sample Distributions, 2017",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2018"], main = "Sample Distributions, 2018",
xlab = "Sampling Result (ug/kg)")
hist(df$Result[df$Sample.Year == "2019"], main = "Sample Distributions, 2019",
xlab = "Sampling Result (ug/kg)")
#Boxplots generated to examine tendencies of data by year and location. plot = FALSE will return the statistics
#on which the boxplots are constructed, which include minimums, maximums, medians, and First/Third Quartiles
par(mfrow = c(1,1))
#Boxplots generated to examine tendencies of data by year and location. plot = FALSE will return the statistics
#on which the boxplots are constructed, which include minimums, maximums, medians, and First/Third Quartiles
par(mfrow = c(1,1))
#Figure 2: By year
boxplot(Result ~ Sample.Year, data = df, ylim = c(0,450), main = "Sampling Result by Year", xlab = "Year Sampled", ylab = "Sampling Result (ug/kg)")
statistics_year <- data.frame(boxplot(Result ~ Sample.Year, data = df, plot = FALSE)$stats, row.names=c("Min","First Quartile","Median","Third Quartile","Maximum"))
colnames(statistics_year) <- c("2015", "2016", "2017", "2018", "2019")
#Figure 3: By location
boxplot(Result ~ Location, data = df, ylim = c(0,450), main = "Sampling Result by Distance", xlab = "Distance From Spill", ylab = "Sampling Result (ug/kg)")
statistics_location <- data.frame(boxplot(Result ~ Location, data = df, plot = FALSE)$stats, row.names=c("Min","First Quartile","Median","Third Quartile","Maximum"))
colnames(statistics_location) <- c("0-0.5 miles", "0.5-1 miles", "1+ miles")
#Visuals of Location(distance) vs Sample Result, by year
par(mfrow = c(2,3))
boxplot(Result[Sample.Year=="2015"] ~ Location[Sample.Year=="2015"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2015",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2016"] ~ Location[Sample.Year=="2016"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2016",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2017"] ~ Location[Sample.Year=="2017"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2017",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2018"] ~ Location[Sample.Year=="2018"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2018",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
boxplot(Result[Sample.Year=="2019"] ~ Location[Sample.Year=="2019"], data = df, ylim = c(0,450), main = "Sampling Result by Distance, 2019",
xlab = "Distance", ylab = "Sampling Result (ug/kg)")
data(iris)
fit_species = lm(Sepal.Length ~ Species, data = iris)
summary(fit_species)
boxplot(Sepal.Length ~ Species, data=iris,  ylab = "Sepal Length",
main = "Sepal Length by Species")
shapiro.test(residuals(fit_species))
fit_petals = lm(Petal.Width ~ Petal.Length, data = iris)
plot(
Petal.Width ~ Petal.Length,
data = iris,
xlab = "Petal Length (cm)",
ylab = "Petal Width (cm)")
summary(fit_petals)
-0.363076 + 4*(0.415755)
shapiro.test(residuals(fit_petals))
require(here)
ginkgos <- data.frame(read.csv(here("data","ginkgo_data_2022.csv")))
summary(ginkgos)
trees_seeds <- data.frame(subset(ginkgos, select = c("site_id","seeds_present")))
trees_with_seeds <- data.frame(unique(trees_seeds$site_id[trees_seeds$seeds_present==TRUE]))
require(here)
ginkgos <- data.frame(read.csv(here("data","ginkgo_data_2022.csv")))
summary(ginkgos)
trees_seeds <- data.frame(subset(ginkgos, select = c("site_id","seeds_present")))
trees_with_seeds <- data.frame(unique(trees_seeds$site_id[trees_seeds$seeds_present==TRUE]))
?here
??here
?length
?matrix
?data.frame
?dim()
?subset
?summary
?mean()
?plot
?plot
?plot
library(here)
# Reading in a csv file "ginkgo data 2022" from our project data folder
ginkgo_data <- data.frame(read.csv(here("data","ginkgo_data_2022.csv")))
plot(ginkgo_data$max_width ~ ginkgo_data$max_depth, pch = 5, cex = 2, main = "Ginkgo Width vs Depth", xlab = "Ginkgo Width (mm)", ylab = "Ginkgo Depth (mm)", xlim = c(0,100), ylim = c(0,100)
)
?hist
max(ginkgo_data$max_depth)
?boxplot()
ginkgo_data <- data.frame(read.csv(here("data","ginkgo_data_2022.csv")))
head(ginkgo_data)
library(here)
ginkgo_data <- data.frame(read.csv(here("data","ginkgo_data_2022.csv")))
head(ginkgo_data)
View(ginkgo_data)
boxplot(petiole_length, data=ginkgo_data)
head(ginkgo_data)
boxplot(petiole_length, data = ginkgo_data)
boxplot(ginkgo_data$petiole_length)
boxplot(petiole_length ~ seeds_present, data=ginkgo_data)
?par
?dnorm
norm = dnorm(ginkgo_data$max_width, mean = 0, sd= 1)
norm
# Create a vector of x-values from -4 to 4:
x = seq(from = -6, to = 6, length.out = n)
# Create the corresponding y-values:
y = dnorm(x, mean = 0, sd = 1)
#Prob density graph
# How many points?
n = 1000
# Create a vector of x-values from -4 to 4:
x = seq(from = -6, to = 6, length.out = n)
# Create the corresponding y-values:
y = dnorm(x, mean = 0, sd = 1)
# plot!
plot(y ~ x, type = "l", ylab = "Probability Density")
?qnorm
#Prob density graph
# How many points?
n = 1000
# Create a vector of x-values from -4 to 4:
x = seq(from = -6, to = 6, length.out = n)
# Create the corresponding y-values:
y = dnorm(x, mean = 0, sd = 1)
# plot!
plot(y ~ x, type = "l", ylab = "Probability Density")
y_2 = dnorm(x, mean = 0, sd = 2)
points(y_2 ~ x, type = "l", lty  = 2)
y_3 = dnorm(x, mean = -2, sd = 1)
points(y_3 ~ x, type = "l", lty  = 2)
#cumulative density
y_cdf_1 = pnorm(x, mean = 0, sd = 1)
plot(y_cdf_1 ~ x, type = "l", ylab = "cumulative density")
#binomial mass plot
x_bin = 0:5
y_bin_2 = dbinom(x_bin, size = 5, prob = 0.4)
barplot(
height = y_bin_2,
# the names to print with each bar:
names.arg = x_bin,
# Tells R to remove space between bars:
space = 0,
ylab = "Pr(x)",
main = "Binomial: n = 5, p = 0.4")
y_bin_3 = pbinom(x_binm size = 5, prob = 0.4)
y_bin_3 = pbinom(x_bin, size = 5, prob = 0.4)
barplot(
height = y_bin_3,
# the names to print with each bar:
names.arg = x_bin,
# Tells R to remove space between bars:
space = 0,
ylab = "Pr(x)",
main = "Binomial: n = 5, p = 0.4")
# plot!
plot(y ~ x, type = "l", ylab = "Probability Density")
#cumulative density
y_cdf_1 = pnorm(x, mean = 0, sd = 1)
plot(y_cdf_1 ~ x, type = "l", ylab = "cumulative density")
y_q = qnorm(x, mean=0, sd=1)
plot(y_q ~ x, type = "l")
library(here)
ginkgo_data <- data.frame(read.csv(here("data","delomys.csv")))
delomys <- data.frame(read.csv(here("data","delomys.csv")))
head(delomys)
head(delomys)
summary(delomys)
#body mass test for normality
shapiro.test(delomys$body_mass)
#body length test for normality
shapiro.test(delomys$body_length)
#Graphical exploration
#A scatterplot of body mass and body length
plot(delomys$body_mass, delomys$body_length, main="Body Mass vs Body Length", ylab = "Body Length", xlab = "Body Mass")
#A histogram of body mass
hist(delomys$body_mass, xlab="Body Mass", main="Histogram of Body Mass")
#A conditional boxplot of body mass, conditioned on species (column binomial)
boxplot(delomys$body_mass ~ delomys$binomial)
#A conditional boxplot of body mass, conditioned on species (column binomial)
boxplot(delomys$body_mass ~ delomys$binomial, xlab="Species", ylab="Body Mass", main = "Body Mass by Species")
#A conditional boxplot of body mass, conditioned on sex (column sex)
boxplot(delomys$body_mass ~ delomys$sex, xlab="Sex", ylab="Body Mass", main = "Body Mass by Sex")
#A conditional boxplot of body mass, conditioned on both species and sex
boxplot(delomys$body_mass ~ delomys$binomial*delomys$sex, xlab="Species", ylab="Body Mass", main = "Body Mass by Species")
?boxplot
#A conditional boxplot of body mass, conditioned on both species and sex
boxplot(delomys$body_mass ~ delomys$sex*delomys$binomial, xlab="Species", ylab="Body Mass", main = "Body Mass by Species"
)
#A conditional boxplot of body mass, conditioned on both species and sex
boxplot(delomys$body_mass ~ delomys$sex*delomys$binomial, xlab="Species", ylab="Body Mass", main = "Body Mass by Species",
names = c("Female Delomys Dorsalis","Male Delomys Dorsalis","Female Delomys Sublineatus", "Male Delomys Sublinaetus"))
#Graphical exploration
#A scatterplot of body mass and body length
plot(delomys$body_mass, delomys$body_length, main="Body Mass vs Body Length", ylab = "Body Length", xlab = "Body Mass")
#A histogram of body mass
hist(delomys$body_mass, xlab="Body Mass", main="Histogram of Body Mass")
#A histogram of body length
hist(delomys$body_length, xlab="Body Length", main="Histogram of Body Length")
#A histogram of body mass
hist(delomys$body_mass, xlab="Body Mass", main="Histogram of Body Mass")
#A histogram of body length
hist(delomys$body_length, xlab="Body Length", main="Histogram of Body Length")
#body mass test for normality
shapiro.test(delomys$body_mass)
#body length test for normality
shapiro.test(delomys$body_length)
#A histogram of body length
hist(delomys$body_length, xlab="Body Length", main="Histogram of Body Length", xlim=175)
#A histogram of body length
hist(delomys$body_length, xlab="Body Length", main="Histogram of Body Length", xlim=c(0,175))
#A histogram of body length
hist(delomys$body_length, xlab="Body Length", main="Histogram of Body Length")
#A histogram of body mass
hist(delomys$body_mass, xlab="Body Mass", main="Histogram of Body Mass")
#body mass test for normality
shapiro.test(delomys$body_mass)
#body length test for normality
shapiro.test(delomys$body_length)
#A conditional boxplot of body mass, conditioned on species (column binomial)
boxplot(delomys$body_mass ~ delomys$binomial, xlab="Species", ylab="Body Mass", main = "Body Mass by Species")
#A conditional boxplot of body mass, conditioned on sex (column sex)
boxplot(delomys$body_mass ~ delomys$sex, xlab="Sex", ylab="Body Mass", main = "Body Mass by Sex")
#A conditional boxplot of body mass, conditioned on both species and sex
boxplot(delomys$body_mass ~ delomys$sex*delomys$binomial, xlab="Species", ylab="Body Mass", main = "Body Mass by Species",
names = c("Female Delomys Dorsalis","Male Delomys Dorsalis","Female Delomys Sublineatus", "Male Delomys Sublinaetus"))
#A conditional boxplot of body mass, conditioned on species (column binomial)
boxplot(delomys$body_mass ~ delomys$binomial, xlab="Species", ylab="Body Mass", main = "Body Mass by Species")
#A conditional boxplot of body mass, conditioned on sex (column sex)
boxplot(delomys$body_mass ~ delomys$sex, xlab="Sex", ylab="Body Mass", main = "Body Mass by Sex")
#A conditional boxplot of body mass, conditioned on both species and sex
boxplot(delomys$body_mass ~ delomys$sex*delomys$binomial, xlab="Species", ylab="Body Mass", main = "Body Mass by Species and Sex",
names = c("Female Delomys Dorsalis","Male Delomys Dorsalis","Female Delomys Sublineatus", "Male Delomys Sublinaetus"))
#A conditional boxplot of body mass, conditioned on species (column binomial)
boxplot(delomys$body_mass ~ delomys$binomial, xlab="Species", ylab="Body Mass", main = "Body Mass by Species")
#A conditional boxplot of body mass, conditioned on sex (column sex)
boxplot(delomys$body_mass ~ delomys$sex, xlab="Sex", ylab="Body Mass", main = "Body Mass by Sex")
#A conditional boxplot of body mass, conditioned on both species and sex
boxplot(delomys$body_mass ~ delomys$sex*delomys$binomial, xlab="Species", ylab="Body Mass", main = "Body Mass by Species and Sex",
names = c("Female Delomys Dorsalis","Male Delomys Dorsalis","Female Delomys Sublineatus", "Male Delomys Sublinaetus"))
?lm
#Model Building
fit1 = lm(body_length ~ body_mass, data = delomys)
fit2 = anova(lm(body_mass ~ sex, data = delomys))
fit3 = anova(lm(body_mass ~ binomial, data = delomys))
summary(fit3)
fit3
?anova
fit2 = anova(lm(body_mass ~ sex, data = delomys))
fit3 = anova(lm(body_mass ~ binomial, data = delomys))
fit4 = anova(lm(body_mass ~ sex + binomial, data = delomys))
fit5 = anova(lm(body_mass ~ sex * binomial, data = delomys))
#Model Diagnostics
hist(residuals(fit1), main="Fit 1 Residuals")
hist(residuals(fit2), main="Fit 2 Residuals")
#Model Building
fit1 = lm(body_length ~ body_mass, data = delomys)
fit2 = lm(body_mass ~ sex, data = delomys)
fit3 = lm(body_mass ~ binomial, data = delomys)
fit4 = lm(body_mass ~ sex + binomial, data = delomys)
fit5 = lm(body_mass ~ sex * binomial, data = delomys)
#Model Diagnostics
hist(residuals(fit1), main="Fit 1 Residuals")
hist(residuals(fit2), main="Fit 2 Residuals")
hist(residuals(fit3), main="Fit 3 Residuals")
hist(residuals(fit4), main="Fit 4 Residuals")
hist(residuals(fit5), main="Fit 5 Residuals")
shapiro.test(residuals(fit1))
shapiro.test(residuals(fit2))
shapiro.test(residuals(fit3))
shapiro.test(residuals(fit4))
shapiro.test(residuals(fit5))
summary(fit1)
summary(fit1)
tttttttt
summary(fit1)
summary(fit2)
summary(fit3)
#A conditional boxplot of body mass, conditioned on species (column binomial)
boxplot(delomys$body_mass ~ delomys$binomial, xlab="Species", ylab="Body Mass", main = "Body Mass by Species")
summary(fit3)
summary(anova(fit4))
anova(fit4)
anova(fit5)
summary(fit2)
summary(fit3)
summary(fit2)
summary(fit3)
anova(fit4)
anova(fit5)
summary(fit1)
summary(fit2)
summary(fit3)
anova(fit4)
anova(fit5)
#model comparison
aic(fit2)
#model comparison
AIC(fit2)
AIC(fit3)
AIC(fit4)
AIC(fit5)
head(delomys)
summary(delomys)
library(here)
#Numerical exploration
delomys <- data.frame(read.csv(here("data","delomys.csv")))
head(delomys)
summary(delomys)
#Graphical exploration
#A scatterplot of body mass and body length
plot(delomys$body_mass, delomys$body_length, main="Body Mass vs Body Length", ylab = "Body Length", xlab = "Body Mass")
#A histogram of body mass
hist(delomys$body_mass, xlab="Body Mass", main="Histogram of Body Mass")
#A histogram of body mass
hist(delomys$body_mass, xlab="Body Mass", main="Histogram of Body Mass")
#A histogram of body length
hist(delomys$body_length, xlab="Body Length", main="Histogram of Body Length")
#A conditional boxplot of body mass, conditioned on species (column binomial)
boxplot(delomys$body_mass ~ delomys$binomial, xlab="Species", ylab="Body Mass", main = "Body Mass by Species")
#body mass test for normality
shapiro.test(delomys$body_mass)
#body length test for normality
shapiro.test(delomys$body_length)
#Model Building
fit1 = lm(body_length ~ body_mass, data = delomys)
fit2 = lm(body_mass ~ sex, data = delomys)
fit3 = lm(body_mass ~ binomial, data = delomys)
fit4 = lm(body_mass ~ sex + binomial, data = delomys)
fit5 = lm(body_mass ~ sex * binomial, data = delomys)
#Model Diagnostics
hist(residuals(fit1), main="Fit 1 Residuals")
hist(residuals(fit2), main="Fit 2 Residuals")
hist(residuals(fit3), main="Fit 3 Residuals")
hist(residuals(fit4), main="Fit 4 Residuals")
hist(residuals(fit5), main="Fit 5 Residuals")
shapiro.test(residuals(fit1))
shapiro.test(residuals(fit2))
shapiro.test(residuals(fit3))
shapiro.test(residuals(fit4))
shapiro.test(residuals(fit5))
summary(fit1)
summary(fit2)
summary(fit1)
summary(fit2)
summary(fit3)
anova(fit4)
anova(fit5)
